remDr$findElement(using = 'class name', value = 'Buttonstyled__ButtonStyled-sc-5gjk6l-0 iCZpGI Box-sc-kv6pi1-0 fDMIuA')$clickElement()
remDr$findElement(using = 'class name', value = 'Buttonstyled')$clickElement()
remDr$findElement(using = 'class name', value = 'Buttonstyled')$clickElement()
remDr$closeall()
?rsDriver
?remoteDriver
library(tidyr)
library(dplyr)
library(tibble)
library(readr)
library(rvest)
library(RSelenium)
library(netstat)
library(wdman)
selenium(retcommand=T)
rdriver <- rsDriver(browser = "chrome",
chromever = NULL,
verbose = FALSE,
port = free_port())
remDr <- rdriver$client
remDr$navigate("http://www.google.com/ncr")
webElem <- remDr$findElement(using = "class", "gLFyf")
webElem$getElementAttribute("class")
webElem$getElementAttribute("id")
webElem$getElementAttribute("name")
webElem$getElementAttribute("type")
remDr$navigate("http://www.google.com/ncr")
webElem <- remDr$findElement(using = "css", "input#gLFyf")
webElem <- remDr$findElement(using = "css", "id#gLFyf")
webElem <- remDr$findElement(using = "css", "input#APjFqb")
webElem <- remDr$findElement(using = "css", "[class = 'gLFyf']")
webElem$sendKeysToElement(list("R Cran"))
remDr$navigate("http://www.google.com/ncr")
webElem <- remDr$findElement(using = "css", "[class = 'gLFyf']")
webElem$sendKeysToElement(list("R Cran", key = "enter"))
LC20lb MBeuO DKV0Md
webElems <- remDr$findElements(using = "css selector", "h3.LC20lb")
resHeaders <- unlist(lapply(webElems, function(x) {x$getElementText()}))
resHeaders
webElem <- webElems[[which(resHeaders == "The Comprehensive R Archive Network")]]
webElem$clickElement()
remDr$getCurrentUrl()
remDr$getTitle()
remDr$goBack()
webElems[[1]]$clearElement()
resHeaders
class(resHeaders)
which(resHeaders == "The Comprehensive R Archive Network")
webElem <- webElems[[1]]
webElem$clickElement()
remDr$goBack()
webElems[[1]]$clickElement()
remDr$navigate("http://www.google.com/ncr")
webElem <- remDr$findElement(using = "css", "[class = 'gLFyf']")
webElem$sendKeysToElement(list("R Cran", key = "enter"))
webElems <- remDr$findElements(using = "css selector", "h3.LC20lb")
webElems[[1]]$clickElement()
remDr$goBack()
webElems[[2]]$clickElement()
webElems[[5]]$clickElement()
webElems[[7]]$clickElement()
remDr$goBack()
webElems[[6]]$clickElement()
remDr$goBack()
webElems[[1]]$clickElement()
webElems[[1]]$clickElement()
remDr$navigate("https://cran.r-project.org/")
remDr$switchToFrame("banner")
webElems <- remDr$findElements("partial link text", "Download R")
sapply(webElems, function(x) x$getElementText())
remDr$closeall()
?renderImage
shiny::runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
shiny::runApp('Documents/sale4cast')
shiny::runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
datf
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
datf10Row
datf10Row
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
tColIndex
datf10Row
nextCol
datf10Row[[tColIndex]]
parse_time(datf10Row[[tColIndex]])
parse_time(datf10Row[[2]])
parse_time(datf10Row[[2]])
is.na(parse_time(datf10Row[[2]]))
?parse_time
runApp('Documents/sale4cast')
datf10Row
tColIndex
datf10Row[[tColIndex]]
parse_time(datf10Row[[tColIndex]])
parse_time(as.integer(datf10Row[[tColIndex]]))
2+2
2*3+4
library(tidyverse)
library(ggplot2)
mpg
dt <- mpg
View(dt)
mpg
mpg <- mpg
View(mpg)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = head(mpg,1)) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = head(mpg,2)) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = head(mpg,3)) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = head(mpg,4)) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = head(mpg,5)) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = head(mpg,6)) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = head(mpg,7)) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = head(mpg,8)) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = head(mpg,9)) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = head(mpg,10)) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = head(mpg,100)) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = tail(mpg,1)) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = tail(mpg,2)) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_line(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data =    ) +           (mapping = aes(x = ,      y =    ))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy,))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = class, color = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = class, alpha = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, shape = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, alpha = class), color = red)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, alpha = class), color = RED)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, alpha = class), color = 'RED')
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy), color = 'RED')
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = 'RED'))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy), color = 'RED')
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class), color = 'RED')
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, shape = class), color = 'RED')
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = class), color = 'RED')
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = class), color = 'GREEN')
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = class), color = 'BLUE')
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = class), color = 'DARKBLUE')
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, shape = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_wrap(~class)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_wrap(~class, nrow = 2)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_wrap(~class)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_wrap(~class, nrow = 2)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(class~cyl)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(drv~cyl)
shiny::runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
datfSplitAggByDay
datfSplitAggByDay
?subset
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
datf %>% mutate(zscore = (abs(datf[[4]] -mean(datf[[4]]))/sd(datf[[4]]))) %>% filter( zscore < 1.8)
datfSplitAggByDay %>% mutate(zscore = (abs(datf[[4]] -mean(datf[[4]]))/sd(datf[[4]]))) %>% filter( zscore < 1.8)
datfSplitAggByDay %>% mutate(zscore = (abs(.[[4]] -mean(.[[4]]))/sd(.[[4]]))) %>% filter( zscore < 1.8)
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
datf %>% mutate(zscore = (abs(.[[4]] - mean(.[[4]]))/sd(.[[4]]))) %>% filter( zscore < 1.8)
datfSplitAggByDay %>% mutate(zscore = (abs(.[[4]] - mean(.[[4]]))/sd(.[[4]]))) %>% filter( zscore < 1.8)
datfSplitAggByDay %>% mutate(zscore = (abs(.[[4]] - mean(.[[4]]))/sd(.[[4]]))) %>% filter( zscore < 1.8)
datfSplitAggByDay %>% mutate(zscore = (abs(.[[4]] - mean(.[[4]]))/sd(.[[4]]))) %>% filter( zscore < 1.8) %>% select(-zscore)
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
numOfOutlier
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
emptyDatf
datfSplitAggByDay
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
splitedDatf %>% select(.[[1:4]])
splitedDatf %>% select(.[[1]])
splitedDatf %>% select(Day, Month, Year)
splitedDatf %>% select(Year, Month, Day)
splitedDatf %>% select(Year, Month, Day, .[[4]])
splitedDatf %>% .[[4]]
splitedDatf %>% .[[1:4]]
splitedDatf %>% .[[c(1,2,34)]]
splitedDatf %>% .[[c(1,2,3,4)]]
splitedDatf %>% .[c(1,2,3,4)]
splitedDatf %>% .[c(1:4)]
splitedDatf %>% .[c(1:5)]
splitedDatf %>% .[c(1,2,3,4)]
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
emptyDatf
dataForAlgo
dataForAlgo <- rows_update(emptyDatf, datfSplitAggByDay, by=c("Year", "Month", "Day"), unmatched = "ignore")
dataForAlgo
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
freq
dataForAlgo
dataForAlgo
filteredWeekDay
freq
dataForAlgo
datfSplitAggByDayOU
make_date(lastRow$Year, lastRow$Month, lastRow$Day)
dataForAlgo
dataForAlgo$NumOfSalesOrder
dataForAlgo[[4]]
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
forecastedData
forecastPart
forecastPart
originalData
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
originalData
forecastPart
?rbind
originalData %>% mutate(Date = make_date(Year, Month, Day))
originalData %>% mutate(Date = make_date(Year, Month, Day)) %>% .c[(7,4,5,6)]
originalData %>% mutate(Date = make_date(Year, Month, Day)) %>% .[c(7,4,5,6)]
originalData <- originalData %>% mutate(Date = make_date(Year, Month, Day)) %>% .[c(7,4,5,6)]
originFittedForecast <- rbind(originalData, c(forecastPart))
forecastPart
originFittedForecast <- rbind(originalData, c(forecastPart$Date, forecastPart$Forecast, forecastPart$Lo80, forecastPart$Hi80))
forecastPart$Date
originFittedForecast <- rbind(originalData, c(as.Date(forecastPart$Date), forecastPart$Forecast, forecastPart$Lo80, forecastPart$Hi80))
rbind(originalData, forecastPart)
originalData
shiny::runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
forecastInfo
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
forecastInfo
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
forecastPlot
renderPlot(forecastPlot)
renderPlot(forecastPlot)
renderPlot(forecastPlot)
renderPlot(forecastPlot)
renderPlot(forecastPlot)
renderPlot(forecastPlot)
forecastPlot
shiny::runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
splitedDatf
splitedDatf
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
splitedDatfC
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
plot
plot
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
plot
plot
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
shiny::runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
plot(1:10)
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
paste0(colnames(splitedDatfC)[4],".jpeg")
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
splitedDatf
splitedDatfC
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
shiny::runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
library(shiny); runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
width
height
shiny::runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
width
height
pixelratio
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
pixelratio
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
width
height
session$clientData$output_myImage_width
session$clientData$output_myImage_height
session$clientData$output_myImage_width
session$clientData$output_myImage_height
session$clientData$pixelratio
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
pixelratio
runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
width
height
runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
width
runApp('OneDrive/R_Programming/Shiny/insertUI/Test.R')
width
session$clientData$output_myImage_width
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
session$clientData$output_myImage_width
function() input$width
?output_myImage_width
?clientData
?session
session$clientData$output_outputId_width
shiny::runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
paste0(colnames(splitedDatfC)[4], ".png"))
paste0(colnames(splitedDatfC)[4], ".png")
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
runApp('OneDrive/UnitCodeSale4Cast/DailyBioProductPrice')
shiny::runApp('OneDrive/UnitCodeSale4Cast/NumberPrediction')
shiny::runApp()
shiny::runApp()
datf
runApp()
milk
milk[[1]]
milk[[1:100]]
milk[1:100]
plot(milk[1:100])
autoplot(milk)
autoplot(milk/monthdays(milk))
autoplot(milk/monthdays(milk))
sdata <- milk/monthdays(milk)
sdata <- milk/monthdays(milk) %>% as_tibble()
sdata <- milk/monthdays(milk)
sadat <- sdata[1:100]
View(data)
class(sdata)
sadat <- as.numeric(sdata[1:100])
sdata <- milk/monthdays(milk)
library(tibble)
sdata <- tibble(tb = milk/monthdays(milk))
View(sdata)
library(readr)
sdata <- tibble(tb = milk/monthdays(milk))
sdata <- tail(sdata)
sdata <- tail(sdata, 99)
write_csv(sdata)
write_csv(sdata, sdata.csv)
?write_csv
write_csv(sdata, "sdata.csv")
write_csv(sdata, "/home/shafiul/sdata.csv")
write_csv(sdata, "/home/shafiul/sdata.csv")
write_csv(sdata, "/home/shafiul/Downloads/sdata.csv")
sdata
sdata <- tibble(tb = milk/monthdays(milk))
sdata
sdata <- tail(sdata$tb, 99)
write_csv(sdata, "/home/shafiul/Downloads/sdata.csv")
sdata
sdata%tb
sdata$tb
sdata <- tibble(tb = milk/monthdays(milk))
sdata$tb
sdata$tb[1:99]
data <- sdata$tb[1:99]
write_csv(data, "/home/shafiul/Downloads/sdata.csv")
write_csv(sdata$tb[1:99], "/home/shafiul/Downloads/sdata.csv")
write_csv(sdata, "/home/shafiul/Downloads/sdata.csv")
sdata
sdata <- tail(sdata, 90)
sdata
write_csv(sdata, "/home/shafiul/Downloads/sdata.csv")
sdata <- tail(sdata, 99)
write_csv(sdata, "/home/shafiul/Downloads/sdata.csv")
sdata
sdata <- tibble(tb = milk/monthdays(milk))
sdata
tail(sdata, 90)
sdata <- tail(sdata, 90)
sdata
sdata
tail(as.integer(sdata), 100)
sdata <- tail(sdata, 100)
sdata
sdata <- tibble(tb = milk/monthdays(milk))
sdata
sdata <- tail(sdata, 100)
sdata
sdata$tb <- as$integer(sdata$tb)
sdata$tb <- as.integer(sdata$tb)
sdata
wrs <- sdata
write_csv(wrs, "/home/shafiul/Downloads/sdata.csv")
runApp('~/OneDrive/UnitCodeSale4Cast/LogInWithFullDBpanel')
shiny::runApp()
runApp()
library(tidyverse)
read_csv("C:/Users/Shafi/OneDrive/Demo/SneakerSellPrediction/Data/sneakerData.csv")
read_csv("C:/Users/Shafi/OneDrive/Demo/SneakerSellPrediction/Data/sneakerData.csv")
read_csv("C:/Users/Shafi/OneDrive/Demo/SneakerSellPrediction/Data/sneakerData.csv")
df <- read_csv("C:/Users/Shafi/OneDrive/Demo/SneakerSellPrediction/Data/sneakerData.csv")
View(df)
df$Canvas_Sneakers <- (df$Canvas_Sneakers%%8 + 3)
plot(df$Canvas_Sneakers)
df <- read_csv("C:/Users/Shafi/OneDrive/Demo/SneakerSellPrediction/Data/sneakerData.csv")
plot((df$Canvas_Sneakers%%8 + 3))
plot((df$Canvas_Sneakers%%3 + 3))
plot((df$Canvas_Sneakers%%4 + 3))
plot((df$Canvas_Sneakers%%5 + 3))
plot((df$Canvas_Sneakers%%6 + 3))
plot((df$Canvas_Sneakers%%12 + 3))
?plot
plot((df$Canvas_Sneakers%%12 + 3), type = "l")
df$Canvas_Sneakers <- df$Canvas_Sneakers%%12 + 3
plot((df$Basketball_Sneakers %% 12 + 3), type = "l")
plot((df$Basketball_Sneakers %% 9 + 3), type = "l")
plot((df$Basketball_Sneakers %% 10 + 3), type = "l")
plot((df$Basketball_Sneakers %% 7 + 3), type = "l")
df$Basketball_Sneakers <- df$Basketball_Sneakers %% 7 + 3
plot((df$Leather_Sneakers %% 7 + 3), type = "l")
plot((df$Leather_Sneakers %% 6 + 3), type = "l")
plot((df$Leather_Sneakers %% 6 + 2), type = "l")
plot((df$Leather_Sneakers %% 5 + 2), type = "l")
df$Leather_Sneakers <- df$Leather_Sneakers %% 5 + 2
plot((df$Running_Sneakers %% 5 + 2), type = "l")
plot((df$Running_Sneakers %% 7 + 2), type = "l")
df$Running_Sneakers <- df$Running_Sneakers %% 7 + 2)
df$Running_Sneakers <- df$Running_Sneakers %% 7 + 2
df$Running_Sneakers <- df$Running_Sneakers %% 7 + 3
write_csv(df, "C:/Users/Shafi/OneDrive/Demo/SneakerSellPrediction/Data/sneakerData.csv")
df
as.Date(df$Date)
as.Date("9/29/2012")
library(ubridate)
library(lubridate)
mdy("9/29/2012")
mdy("9/29/2012") +7
mdy(mdy(df$Date)) +7
mdy(df$Date) +7
mdy(df$Date) + 5*365
mdy(df$Date) + 6*365
mdy(df$Date) + 7*365
mdy(df$Date) + 8*365
mdy(df$Date) + 8*365 + 100
mdy(df$Date) + 8*365 + 200
df$Date <- mdy(df$Date) + 8*365 + 200
df
write_csv(df, "C:/Users/Shafi/OneDrive/Demo/SneakerSellPrediction/Data/sneakerData.csv")
shiny::runApp()
datf
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
